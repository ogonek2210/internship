input {
    pipeline {
        address => "customers_pipeline"
    }
}

filter {

    mutate {
        add_field => {
            "fulladdress" => "%{addressline1} - %{postalcode} - %{city}"
            "contactname" => "%{contactfirstname} %{contactlastname}"
        }
    }

    aggregate {
        task_id => "%{customernumber}"
        code => "
            map['purchases'] ||=0 ;
            map['expenses'] ||=0 ;
            map['purchases'] += event.get('quantityordered') ;
            map['expenses'] += event.get('quantityordered') * event.get('priceeach')
        "
        push_map_as_event_on_timeout => true
        timeout => 20
        timeout_task_id_field => "customernumber"
    }

    prune {
        whitelist_names => [
            "customer",
            "contactname",
            "phone",
            "country",
            "fulladdress",
            "creditlimit",
            "purchases",
            "expenses",
            "createdat",
            "updatedat"
        ]
    }

}

output {
    elasticsearch {
        hosts => "elasticsearch:9200"
        index => "customers"
        document_id => "%{customernumber}"
        action => "update"
        doc_as_upsert => true
        codec => "json"
        template => "/usr/share/logstash/templates/customers.json"
        template_overwrite => true
        template_name => "customers"
        retry_on_conflict => 5
    }
}